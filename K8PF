#!/bin/bash

IFS=$'\n\t'

LOGS="logs"
PF="port forward"
LOGSF="logs streamed"
NOW=$(date +"%F")
NOWT=$(date +"%T")
USER=$(whoami)
APPDIR="${HOME}"/.kubePF

SCRIPT=`basename ${BASH_SOURCE[0]}`

help() {
  cat <<EOF
${SCRIPT}(1)
NAME
    ${SCRIPT} - Quick k8 port-forward.
EOF
}

# Cluster select from the list
kube_list() {
  kubectl config get-contexts -o=name 
}

kube_number_list() {
  kube_list | nl -bt
}

kube_cluster_select() {
    kube_list | sed -n ${CLUSTER}p
}

# select name space from the cluster
name_space_list() {
  kubectl --context=$(kube_cluster_select) get namespaces -o=jsonpath='{range .items[*].metadata.name}{@}{"\n"}{end}'
}

name_space_number_list() {
  name_space_list | nl -v1
}

name_space_select() {
    name_space_list | sed -n ${NAMESPACE}p
}

# select pod from the name space
pod_list() {
  kubectl --context=$(kube_cluster_select) --namespace=$(name_space_select) get pods -o=jsonpath='{range .items[*].metadata.name}{@}{"\n"}{end}'
}

pod_number_list() {
  pod_list | nl
}

pod_select() {
  pod_list | sed -n ${POD}p
}

kube_options(){
  echo -e $LOGS'\n'$LOGSF'\n'$PF | nl
}

# logs
logs(){
  kubectl --context=$(kube_cluster_select) --namespace=$(name_space_select) logs $(pod_select)
}

# logs streamed
logs_streamed(){
  kubectl --context=$(kube_cluster_select) --namespace=$(name_space_select) logs -f $(pod_select)
}


# port forward 
port_forward(){
  kubectl --context=$(kube_cluster_select) --namespace=$(name_space_select) port-forward $(pod_select) ${PORT} ${PORT}
}
let PORT
let OPTION
echo "K8 cluster list "; kube_number_list; read CLUSTER;
echo "Namespace list "; name_space_number_list; read NAMESPACE;
echo 'POD list '; pod_number_list; read POD;
echo "kube options "; kube_options; read OPTION
# pod logs 
if [[ $OPTION == 1 ]]; then
  echo "logs of ${POD}";logs
fi
# pod streamed log
if [[ $OPTION == 2 ]]; then
  echo "streamed logs ${POD}"; logs_streamed

fi
# port forward pod
if [[ $OPTION == 3 ]]; then
  echo "port forward ${POD}"; read PORT
port_forward
fi
